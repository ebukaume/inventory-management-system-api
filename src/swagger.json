{
	"swagger": "2.0",
	"info": {
	  "version": "1.0",
	  "title": "Simple Inventory Management System API",
	  "description": "This is an API to power a simple inventory management app. User can CRUD products as well as make sale and query simple statistical data relating to sales."
	},
	"schemes": [
	  "http"
	],
	"host": "localhost:3000",
	"basePath": "/api/v1",
	"tags": [
	  {
		"name": "Product",
		"description": "Endpoint for products"
	  },
	  {
		"name": "Sale",
		"description": "Endpoint for sales"
	  }
	],
	"paths": {
	  "/products": {
		"get": {
		  "description": "Index action of the product resource",
		  "summary": "Returns all the available products",
		  "tags": [
			"Product"
		  ],
		  "produces": [
			"application/json,"
		  ],
		  "responses": {
			"200": {
			  "description": "Sucsess"
			  },
			"400": {
			  "description": "Bad Request"
			  },
			"500": {
			  "description": "Internal server error"
			  }
		  }
		},
		"post": {
			"description": "Create action of the product resource",
			"summary": "Create a new product",
			"tags": [
			  "Product"
			],
			"produces": [
			  "application/json"
			],
			"parameters": [
			  {
				"in": "body",
				"name": "body",
				"required": true,
				"description": "This is the request body object containing product's information",
				"schema": {
				  "$ref": "#/definitions/CreateProductrequest"
				}
			  }
			],
			"responses": {
			  "200": {
				"description": "Success"
			  },
			  "400": {
				"description": "Bad Request"
			  },
			  "500": {
				"description": "Internal server error"
			  }
			}
		  }
	  },
	 "/products/{product_id}": {
		"get": {
		  "description": "Show action of the products resource",
		  "summary": "Returns a single product",
		  "tags": [
			"Product"
		  ],
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "in": "path",
			  "name": "product_id",
			  "required": true,
			  "description": "This is the request param ID passed in the params"
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Success"
			},
			"400": {
			  "description": "Bad Request"
			},
			"404": {
			  "description": "Product does not exist"
			},
			"500": {
			  "description": "Internal server error"
			}
		  }
		  },
		"put": {
			"description": "Update action of the products resource",
			"summary": "Updates a product with the given ID",
			"tags": [
			  "Product"
			],
			"produces": [
			  "application/json"
			],
			"parameters": [
			  {
				"in": "path",
				"name": "product_id",
				"required": true,
				"description": "This is the request param ID passed in the params"
			  },
			  {
				"in": "body",
				"name": "body",
				"required": true,
				"description": "This is the request body object containing product's details to be updated",
				"schema": {
				  "$ref": "#/definitions/CreateProductrequest"
				}
			  }
			],
			"responses": {
			  "200": {
				"description": "Success"
			  },
			  "400": {
				"description": "Bad Request"
			  },
			  "404": {
				"description": "Product does not exist"
			  },
			  "500": {
				"description": "Internal server error"
			  }
			}
		  },
		  "delete": {
			"description": "Destroy action of the products resource",
			"summary": "Deletes a product whose ID is given",
			"tags": [
			  "Product"
			],
			"produces": [
			  "application/json"
			],
			"parameters": [
			  {
				"in": "path",
				"name": "product_id",
				"required": true,
				"description": "This is the request param ID passed in the params"
			  }
			],
			"responses": {
			  "200": {
				"description": "Success"
			  },
			  "400": {
				"description": "Bad Request"
			  },
			  "404": {
				"description": "Product does not exist"
			  },
			  "500": {
				"description": "Internal server error"
			  }
			}
		  }
	  },
	  "/sales": {
		"get": {
			"description": "Returns all the sales",
			"summary": "Gets category profile",
			"tags": [
			  "Sale"
			],
			"produces": [
			  "application/json,"
			],
			"responses": {
			  "200": {
				"description": "Sucsess"
			  },
			  "401": {
				"description": "Kindly sign in"
			  },
			  "500": {
				"description": "Internal server error"
			  }
			}
		  },
		"post": {
		  "description": "Create action of sales resource",
		  "summary": "Creates a new sale",
		  "tags": [
			"Sale"
		  ],
		  "produces": [
			"application/json"
		  ],
		  "parameters": [
			{
			  "in": "body",
			  "name": "body",
			  "required": true,
			  "description": "This is the request body object containing sale creation details",
			  "schema": {
				"type":"array",
				"items":{
					"$ref": "#/definitions/CreateSaleRequest"
				}				
			  }
			}
		  ],
		  "responses": {
			"201": {
			  "description": "Success"
			},
			"400": {
			  "description": "Bad Request"
			},
			"500": {
			  "description": "Internal server error"
			}
		  }
		}
	  },
	  "/sales/{sales_id}": {
		"get": {
			"description": "Show action of the sales resource",
			"summary": "Returns the sale with the given ID",
			"tags": [
			  "Sale"
			],
			"produces": [
			  "application/json"
			],
			"parameters": [
			  {
				"in": "path",
				"name": "salesId",
				"required": true,
				"description": "This is the request param ID passed in the params"
			  }
			],
			"responses": {
			  "200": {
				"description": "Success"
			  },
			  "400": {
				"description": "Bad Request"
			  },
			  "500": {
				"description": "Internal server error"
			  }
			}
		  }
	  }
	},  
	"definitions": {
	  "CreateProductrequest": {
			"title": "Product",
			"type": "object",
			"properties": {
			  "name": {
          "description": "product Name",
          "type": "string"
          },
			  "price": {
          "description": "product price",
          "type": "integer"
          }
			},
			"example": {
			  "productName": "Name",
			  "price": 1000
			},
			"required": [
			  "name, price"
			]
	  },
    "CreateSaleRequest": {
    "title": "Sales",
    "type": "object",
    "properties": {
      "product_id": {
        "description": "product ID",
        "type": "string"
      },
      "quantity": {
        "description": "Quantity of product sold",
        "type": "integer"
      }
      },
      "example": {
      "product_id": "5e3a5b098cba561ce019bb2f",
      "quantity": 100
      },
      "required": [
      "product_id, quantity"
      ]
    }
}
}